name: Compiling glibc packages for termux 3.18

on:
  push:
    paths:
    - 'distro/**'
    - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_arch: [aarch64, armv7]
    name: build
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: jitterbit/get-changed-files@v1
        id: pkgs
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: build
        with:
          arch: ${{ matrix.target_arch }}
          distro: archarm_latest
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/builder"
          dockerRunArgs: |
            --volume "${PWD}/builder:/builder"
          install: |
            pacman -Syu --noconfirm
            pacman -S base-devel python git cmake python-setuptools ruby-ronn publicsuffix-list gtk-doc autoconf-archive gtest rsync --noconfirm --needed
          run: |
            useradd -m user-build
            mkdir -p /data/data/com.termux/files/usr/bin
            ln -s /bin/patch /data/data/com.termux/files/usr/bin/patch
            mkdir -p /data/data/com.termux/files/usr/glibc
            ln -s /lib /data/data/com.termux/files/usr/glibc/lib
            ln -s /usr/share /data/data/com.termux/files/usr/glibc/share
            cd /home/user-build
            sudo -H -u user-build bash -c "git clone https://github.com/Maxython/glibc-for-termux"
            cd glibc-for-termux/distro
            build_pkg="|"
            for j in ${{ steps.pkgs.outputs.added_modified }}; do
              jl=(${j//// })
              if [[ "${jl[0]}" = "distro" && ! $(echo "$build_pkg" | grep "|${jl[1]}|") && -d "${jl[1]}" ]]; then
                cd "${jl[1]}"
                if [[ -f key-gpg.info ]]; then
                  for i in $(cat key-gpg.info); do
                    sudo -H -u user-build bash -c "gpg --recv-keys ${i}"
                  done
                fi
                sudo -H -u user-build bash -c "makepkg"
                tar cJf glibc-packages-${{ matrix.target_arch }}.tar.xz *.pkg.*
                mv glibc-packages-${{ matrix.target_arch }}.tar.xz /builder
                build_pkg+="${jl[1]}|"
                cd ..
              fi
            done
      - uses: actions/upload-artifact@v3
        with:
          name: glibc-packages
          path: "./builder/glibc-packages-${{ matrix.target_arch }}.tar.xz"
          if-no-files-found: error
